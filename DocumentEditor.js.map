{"version":3,"sources":["webpack://json-schema-pouchdb-app/./src/components/DocumentEditor.jsx"],"names":["DocumentEditor","React","loaded","formData","data","this","setState","state","async","props","db","saveDocument","getSchemaId","getDocumentId","enqueueSnackbar","variant","error","console","schema","match","params","document","schemaId","documentId","getSchema","getDocument","render","title","component","RouterLink","to","id","data-testid","onChange","onSubmit","type","color","created","lastUpdated","withRouter","withSnackbar"],"mappings":"yaAWO,MAAMA,UAAuBC,YAAgB,6CAC1C,CACNC,QAAQ,IAFwC,mBAkCvC,EAAGC,SAAUC,MACtBC,KAAKC,SAAS,CAAEF,KAAM,IAAKC,KAAKE,MAAMH,QAASA,QAnCC,mBAsCvCI,OAASL,eAClB,IACE,MAAMC,QAAaC,KAAKI,MAAMC,GAAGC,aAC/BN,KAAKO,cACLP,KAAKQ,gBACLV,GAGFE,KAAKC,SAAS,CAAEF,SAEhBC,KAAKI,MAAMK,gBAAgB,kBAAmB,CAC5CC,QAAS,YAEX,MAAOC,GACPC,QAAQD,MAAMA,OA/ClBJ,cACE,MAAM,OAAEM,GAAWb,KAAKI,MAAMU,MAAMC,OACpC,OAAOF,EAGTL,gBACE,MAAM,SAAEQ,GAAahB,KAAKI,MAAMU,MAAMC,OACtC,OAAOC,EAGc,0BACrB,IACE,MAAMC,EAAWjB,KAAKO,cAChBW,EAAalB,KAAKQ,gBAElBK,QAAeb,KAAKI,MAAMC,GAAGc,UAAUF,GACvClB,QAAaC,KAAKI,MAAMC,GAAGe,YAAYH,EAAUC,GAEvDlB,KAAKC,SAAS,CACZJ,QAAQ,EACRgB,SACAd,SAEF,MAAOY,GAEP,YADAC,QAAQD,MAAMA,IA2BlBU,SACE,MAAM,OAAExB,EAAF,OAAUgB,EAAV,KAAkBd,GAASC,KAAKE,MAEtC,OAAKL,EAKH,gCACE,gBAAC,IAAD,CAAeyB,MAAOT,EAAOS,QAC7B,gBAAC,IAAD,CAAYZ,QAAQ,KAAKa,UAAU,MAChCV,EAAOS,OAEV,yBACE,gBAAC,IAAD,CACEC,UAAWC,KACXC,GAAK,aAAYZ,EAAOa,KACxBC,cAAY,2BAHd,4BAQF,gBAAC,KAAD,CACEd,OAAQA,EAAOA,OACff,SAAUC,EACV6B,SAAU5B,KAAK4B,SACfC,SAAU7B,KAAK6B,SACfF,cAAY,iBAEZ,gBAAC,IAAD,CACEG,KAAK,SACLpB,QAAQ,YACRqB,MAAM,UACNJ,cAAY,wBAJd,SASF,gBAAC,IAAD,MACA,2BACE,uCAAe5B,EAAKiC,SACpB,4CAAoBjC,EAAKkC,cAE3B,gBAAC,IAAD,OAvCK,6BA6Cb,SAAeC,SAAWC,QAAaxC","file":"DocumentEditor.js","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Form from \"@rjsf/material-ui\";\nimport { withSnackbar } from \"notistack\";\nimport DocumentTitle from \"./DocumentTitle\";\nimport Spacer from \"./Spacer\";\n\nexport class DocumentEditor extends React.Component {\n  state = {\n    loaded: false,\n  };\n\n  getSchemaId() {\n    const { schema } = this.props.match.params;\n    return schema;\n  }\n\n  getDocumentId() {\n    const { document } = this.props.match.params;\n    return document;\n  }\n\n  async componentDidMount() {\n    try {\n      const schemaId = this.getSchemaId();\n      const documentId = this.getDocumentId();\n\n      const schema = await this.props.db.getSchema(schemaId);\n      const data = await this.props.db.getDocument(schemaId, documentId);\n\n      this.setState({\n        loaded: true,\n        schema,\n        data,\n      });\n    } catch (error) {\n      console.error(error);\n      return;\n    }\n  }\n\n  onChange = ({ formData: data }) => {\n    this.setState({ data: { ...this.state.data, ...data } });\n  };\n\n  onSubmit = async ({ formData }) => {\n    try {\n      const data = await this.props.db.saveDocument(\n        this.getSchemaId(),\n        this.getDocumentId(),\n        formData\n      );\n\n      this.setState({ data });\n\n      this.props.enqueueSnackbar(\"Document saved.\", {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  render() {\n    const { loaded, schema, data } = this.state;\n\n    if (!loaded) {\n      return <div />;\n    }\n\n    return (\n      <>\n        <DocumentTitle title={schema.title} />\n        <Typography variant=\"h3\" component=\"h1\">\n          {schema.title}\n        </Typography>\n        <p>\n          <Link\n            component={RouterLink}\n            to={`/document/${schema.id}`}\n            data-testid=\"return-to-document-list\"\n          >\n            Return to Document List\n          </Link>\n        </p>\n        <Form\n          schema={schema.schema}\n          formData={data}\n          onChange={this.onChange}\n          onSubmit={this.onSubmit}\n          data-testid=\"document-form\"\n        >\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            data-testid=\"document-save-button\"\n          >\n            Save\n          </Button>\n        </Form>\n        <Spacer />\n        <div>\n          <div>Created: {data.created}</div>\n          <div>Last Updated: {data.lastUpdated}</div>\n        </div>\n        <Spacer />\n      </>\n    );\n  }\n}\n\nexport default withRouter(withSnackbar(DocumentEditor));\n"],"sourceRoot":""}